breed [vendors vendor]
breed [platforms platform]
breed [persons person]

vendors-own[  vendorbase0 vendorbase1 p0 p1 product_feature_1 product_feature_2 product_feature_3 price SC_thresholdvendor Kv1 Kv2 Kv3 revenue0 revenue1]
persons-own[platformchoice app_choice kp1 kp2 w1 w2 w3 price_flexibility SC_thresholdpublic app_user ]
platforms-own[platformbase name numberofvendors Cc Cv Cm Reputation]
globals [v0 v1 interaction app-userratio marketshare entrantreputation entrantCost customertype weightarray1 weightarray2 weightarray3 weightarray4]

;Cc - Cost to consumer
;Cv - cost to vendor adoption
;Cm - Cost to vendor maintenance
;kp1 - strength of direct network effects for people
;kp2 - strength of indirect network effects for people
;Kv1 - strength of positive direct network effects for vendors
;kv2 - strength of negative direct network effects for vendors
;kv3 - strength of indirect network effects
;C1 C2 C3 - maturity of the components offered by each platform
; w1 w2 w3 - significance for each of the features 1 2 and 3


To setup
clear-turtles
  set app-userratio 0.25
  set v0 [3 5 6 5]
  set v1 [5 3 4 5]
  set interaction [-1 0 1 1]
  create-platforms 2
  ask platform 0 [ set name "entrant"  set Cc 0 set Cv 6000 set Cm 1000 set Reputation 600]
  ask platform 1 [ set name "established" set Cc 800 set Cv 6000 set Cm 1000 set Reputation 100]
  create-vendors 5 [set p1 1 set p0 0 set product_feature_1 random-normal 0.4 0.2 set product_feature_2 random-normal 0.5 0.2 set product_feature_3 random-normal 0.7 0.2 set price random-normal 150 30 set revenue0 [ 0 0 0 0 0 0 0 0 0 0] set revenue1 [ 0 0 0 0 0 0 0 0 0 0]]
  create-vendors 3 [set p0 1 set p1 0 set product_feature_1 random-normal 0.6 0.2 set product_feature_2 random-normal 0.7 0.2 set product_feature_3 random-normal 0.7 0.1 set price random-normal 150 30 set revenue0 [ 0 0 0 0 0 0 0 0 0 0] set revenue1 [ 0 0 0 0 0 0 0 0 0 0]]

  create-persons 9000[set platformchoice 1 set app_choice 0 set kp1 random-normal 0.03 0.01 set kp2 random-normal 0.7 0.002  set w1 0.4 set w2 0.5 set w3 0.6 set price_flexibility 1.4 set SC_thresholdpublic 1.7 set app_user random-normal app-userratio 0.1]
  create-persons 1000[set platformchoice 0 set app_choice 0 set kp1 random-normal 0.03 0.01 set kp2 random-normal 0.7 0.002  set w1 0.4 set w2 0.5 set w3 0.6 set price_flexibility 1.4 set SC_thresholdpublic 1.7 set app_user random-normal app-userratio 0.1]

  ask persons[
    if(app_user > 0.5)[
      let currentplatformofperson platformchoice
      let vendors-choice-array [0]
      ask vendors [
        ifelse (0 = currentplatformofperson)[ if(p0 = 1) [set vendors-choice-array fput who vendors-choice-array] ][ if(p1 = 1) [set vendors-choice-array fput who vendors-choice-array] ]
      ]
      set app_choice item (random  (length vendors-choice-array - 1 ))  vendors-choice-array
      ]
  ]


  reset-ticks
end

To generate-user [x]

create-persons x[ set platformchoice chooseplatform  set kp1 random-normal 0.03 0.01 set kp2 random-normal 0.7 0.002  set w1 0.4 set w2 0.5 set w3 0.6 set price_flexibility 1.4 set SC_thresholdpublic 1.7 set app_user random-normal app-userratio 0.1 set app_choice (chooseapp who platformchoice app_user)]

end


To simulate
;; Counting of users for platform and vendors
  ask platforms [
    let platfrombasecounter 0
    let numberofvendorscounter 0
    let platformnumber who

    ask persons [
      if(platformchoice = platformnumber ) [set platfrombasecounter (platfrombasecounter + 1 )]
    ]
    set platformbase platfrombasecounter
    ask vendors [
      ifelse(0  = platformnumber ) [if(p0 = 1)[set numberofvendorscounter (numberofvendorscounter + 1 )]][if(p1 = 1)[set numberofvendorscounter (numberofvendorscounter + 1 )]]
    ]
    set numberofvendors numberofvendorscounter
    ifelse(who = 0 )[set v0 replace-item 0  v0 numberofvendors ][ set v1 replace-item  0  v1 numberofvendors ]
  ]

  ask vendors [
  let vendorbase0counter 0
     let vendorbase1counter 0
  ;  ifelse(currentplatform = 0)[set xcor random-normal 5 2 set ycor random-normal 0 4 set color red][set xcor random-normal -5 2 set ycor random-normal 0 4 set color blue]
    let vendornumber who

    ask persons [
      if(app_choice = vendornumber )[ifelse (platformchoice = 0 ) [set vendorbase0counter (vendorbase0counter + 1 )][set vendorbase1counter (vendorbase1counter + 1 )]]
    ]

    set vendorbase0 vendorbase0counter
    set vendorbase1 vendorbase1counter

  ]
  ;ask platforms [show name show platformbase show numberofvendors]


;; Decisions for change
 ask persons [
    let change platfromchangeforpeople  who platformchoice app_choice
    if(change > 0)[
      ifelse(platformchoice = 0)[ifelse([numberofvendors] of platform 1 > 0 )[set platformchoice 1][set platformchoice 0]][ifelse([numberofvendors] of platform 0 > 0 )[set platformchoice 0][set platformchoice 1]]
      set app_choice chooseApp who platformchoice app_user


    ]

    if(app_user > 0.5)[
      ifelse(app_choice = 0 )[set app_choice chooseApp who platformchoice app_user][
      set change 0
      set  change appchangeforpeople  who platformchoice app_choice
        if(change > 0)[set app_choice change ] ]
    ]

  ]

  ask vendors [
    if(p0 = 1)[set revenue1 lput (vendorbase1 * price - [Cm] of platform 1 ) revenue1 set revenue1 remove-item 0 revenue1 ]
    if(p0 = 0)[set revenue0 lput (vendorbase0 * price - [Cm] of platform 0 ) revenue0 set revenue0 remove-item 0 revenue0 ]
    if(p0 = 0) [let change expandtoplatform0  who
   
      if(change = 1)[
      set p0 1
        set revenue0 [0 0 0 0 0 0 0 0 0 0]
    ]] 
    if(p1 = 0) [let change expandtoplatform1  who
    if(change = 1)[
      set p1 1
        set revenue1 [0 0 0 0 0 0 0 0 0 0]
    ]]
    
    if(p0 = 1 )[ let change leaveplatform0 who
    if (change = 1)
      [set p0  0]
    ]
       
    if(p1 = 1 )[ let change leaveplatform1 who
    if (change = 1)
      [set p1 0]
    ]
    
    
  ]

  generate-user 5
  ask persons [
    if(app_user < 0.5)[set app_user random-normal app-userratio 0.1]]
  set app-userratio (app-userratio + 0.002)

  tick

end

To-report platfromchangeforpeople[ personnumber currentplatformnumber currentapp ]
  ; Calculates the utility for given person using direct and indirect network effects and subsidy
  let platformbasesum 0
  let numberofvendorssum 0
  let reputationsum 0
  let Cc_sum 0
  ask platforms[
  set platformbasesum (platformbasesum + platformbase)
    set numberofvendorssum (numberofvendorssum + numberofvendors)
    set reputationsum (reputationsum + reputation)
    set Cc_sum (Cc_sum + Cc)
  ]

  let currentutility 0
  let competitorutility 0
  let change 0
  ask platforms[
    ifelse( currentplatformnumber = who)
    [set  currentutility  ( weightforplatformbase-customer * (platformbase / platformbasesum) + weightforvendors-customer * (numberofvendors / numberofvendorssum) + weightforreputation-customer * (Reputation / Reputationsum)   - weightforcost-customer * (Cc / Cc_sum) )]
    [set  competitorutility  ( weightforplatformbase-customer * (platformbase / platformbasesum) + weightforvendors-customer * (numberofvendors / numberofvendorssum) + weightforreputation-customer * (Reputation / Reputationsum)   - weightforcost-customer * (Cc / Cc_sum) )]
  ]

  ifelse(competitorutility < currentutility)
  [set change 0][ifelse((competitorutility / currentutility) < 0 )[set change 1][if((competitorutility / currentutility) > 1.4 )[set change 1]]]
  ;show change
  report change
end

To-report appchangeforpeople[ personnumber currentplatformnumber currentapp ]
  ; Calculates the utility for given person using direct and indirect network effects and subsidy

  let vendorbasesum 0
  let pricesum 0
  ask vendors [
  set vendorbasesum (vendorbasesum + vendorbase1 + vendorbase0)
    set pricesum (pricesum + price)
  ]

  let currentutility 0
  let competitorutility [0]
  let competitorarray [0]
  let positionmax 0
  let change 0
  ask vendors[

    ifelse(0 = currentplatformnumber )[
      if(p0 = 1)[
      ifelse(who = currentapp)[
        set currentutility (weightforvendorbase-customer * ( vendorbase1 + vendorbase0 / vendorbasesum) - weightforappprice-customer *( price / pricesum)) ][set competitorutility fput (weightforvendorbase-customer * ( vendorbase1 + vendorbase0 / vendorbasesum) - weightforappprice-customer *( price / pricesum)) competitorutility set competitorarray fput who competitorarray]
    ]][
      if(p1 = 1)[
      ifelse(who = currentapp)[
        set currentutility (weightforvendorbase-customer * ( vendorbase1 + vendorbase0 / vendorbasesum) - weightforappprice-customer *( price / pricesum)) ][set competitorutility fput (weightforvendorbase-customer * ( vendorbase1 + vendorbase0 / vendorbasesum) - weightforappprice-customer *( price / pricesum)) competitorutility set competitorarray fput who competitorarray]
    ]]

  ]
  let maxcomputility max competitorutility

  set  positionmax position maxcomputility competitorutility


  ifelse(maxcomputility < currentutility)
  [set change 0][set change item positionmax competitorarray]

  report change
end



To-report expandtoplatform0 [ vendornumber   ]

  let platformbasesum 0
  let networkeffectstrengthsum 0
  let reputationsum 0
  let Cv_sum 0
  ask platforms [
  set platformbasesum (platformbasesum + platformbase)
    set Cv_sum (Cv_sum + Cv )
    set reputationsum (reputationsum + reputation)
  ]
  set networkeffectstrengthsum ( (item 0 interaction ) * (item 0 v0) + (item 1 interaction ) * (item 1 v0) + (item 2 interaction ) * (item 2 v0) +(item 3 interaction ) * (item 3 v0)  ) + ( (item 0 interaction ) * (item 0 v1) + (item 1 interaction ) * (item 1 v1) + (item 2 interaction ) * (item 2 v1) +(item 3 interaction ) * (item 3 v1)  )
  let currentutility 0
  let competitorutility 0
  let change 0
  ask platforms[
    let networkeffectstrength 0
    ifelse(who = 0)[set networkeffectstrength ( (item 0 interaction ) * (item 0 v0) + (item 1 interaction ) * (item 1 v0) + (item 2 interaction ) * (item 2 v0) +(item 3 interaction ) * (item 3 v0)  ) ][set networkeffectstrength ( (item 0 interaction ) * (item 0 v1) + (item 1 interaction ) * (item 1 v1) + (item 2 interaction ) * (item 2 v1) +(item 3 interaction ) * (item 3 v1)  )]
    ifelse( 1 = who)
    [set  currentutility  (weightforplatformbase-vendor * (platformbase / platformbasesum) + weightfornetworkeffect-vendor * (networkeffectstrength / networkeffectstrength) + weightforreputation-vendor * (reputation / reputationsum)- weightforCost-vendor * (Cv / Cv_sum ))]
    [set  competitorutility  (weightforplatformbase-vendor * (platformbase / platformbasesum) + weightfornetworkeffect-vendor * (networkeffectstrength / networkeffectstrength) + weightforreputation-vendor * (reputation / reputationsum)- weightforCost-vendor * (Cv / Cv_sum ))]
  ]
  if(currentutility = 0 ) [ set currentutility 0.01]
  ifelse(competitorutility < currentutility)
  [set change 0][ifelse(competitorutility / currentutility < 0)[set change 1][if(competitorutility / currentutility > 1.1)[set change 1]]]
  ;show change
  report change

end

to-report leaveplatform0 [vendornumber]
  let revenue [ 0 0 0 0 0 0 0 0 0 0]
  set revenue replace-item 0 revenue (sign item 0 ([revenue0] of vendor vendornumber)) 
  set revenue replace-item 1 revenue (sign item 1 ([revenue0] of vendor vendornumber)) 
  set revenue replace-item 2 revenue (sign item 2 ([revenue0] of vendor vendornumber)) 
  set revenue replace-item 3 revenue (sign item 3 ([revenue0] of vendor vendornumber)) 
  set revenue replace-item 4 revenue (sign item 4 ([revenue0] of vendor vendornumber)) 
  set revenue replace-item 5 revenue (sign item 5 ([revenue0] of vendor vendornumber)) 
  set revenue replace-item 6 revenue (sign item 6 ([revenue0] of vendor vendornumber)) 
  set revenue replace-item 7 revenue (sign item 7 ([revenue0] of vendor vendornumber)) 
    set revenue replace-item 8 revenue (sign item 8 ([revenue0] of vendor vendornumber)) 
    set revenue replace-item 9 revenue (sign item 9 ([revenue0] of vendor vendornumber)) 
  ifelse (sum revenue < -7) [report 1][report 0]
end 

to-report leaveplatform1 [vendornumber]
  let revenue [ 0 0 0 0 0 0 0 0 0 0]
  set revenue replace-item 0 revenue (sign item 0  ([revenue1] of vendor vendornumber)) 
  set revenue replace-item 1 revenue (sign item 1  ([revenue1] of vendor vendornumber)) 
  set revenue replace-item 2 revenue (sign item 2  ([revenue1] of vendor vendornumber)) 
  set revenue replace-item 3 revenue (sign item 3 ([revenue1] of vendor vendornumber)) 
  set revenue replace-item 4 revenue (sign item 4  ([revenue1] of vendor vendornumber)) 
  set revenue replace-item 5 revenue (sign item 5  ([revenue1] of vendor vendornumber)) 
  set revenue replace-item 6 revenue (sign item 6  ([revenue1] of vendor vendornumber)) 
  set revenue replace-item 7 revenue (sign item 7  ([revenue1] of vendor vendornumber)) 
    set revenue replace-item 8 revenue (sign item 8  ([revenue1] of vendor vendornumber)) 
    set revenue replace-item 9 revenue (sign item 9  ([revenue1] of vendor vendornumber)) 
  ifelse (sum revenue < -7) [report 1][report 0]
end 

To-report expandtoplatform1 [ vendornumber ]

  let platformbasesum 0
  let networkeffectstrengthsum 0
  let reputationsum 0
  let Cv_sum 0
  ask platforms [
  set platformbasesum (platformbasesum + platformbase)
    set Cv_sum (Cv_sum + Cv )
    set reputationsum (reputationsum + reputation)
  ]
  set networkeffectstrengthsum ( (item 0 interaction ) * (item 0 v0) + (item 1 interaction ) * (item 1 v0) + (item 2 interaction ) * (item 2 v0) +(item 3 interaction ) * (item 3 v0)  ) + ( (item 0 interaction ) * (item 0 v1) + (item 1 interaction ) * (item 1 v1) + (item 2 interaction ) * (item 2 v1) +(item 3 interaction ) * (item 3 v1)  )
  let currentutility 0
  let competitorutility 0
  let change 0
  ask platforms[
    let networkeffectstrength 0
    ifelse(who = 0)[set networkeffectstrength ( (item 0 interaction ) * (item 0 v0) + (item 1 interaction ) * (item 1 v0) + (item 2 interaction ) * (item 2 v0) +(item 3 interaction ) * (item 3 v0)  ) ][set networkeffectstrength ( (item 0 interaction ) * (item 0 v1) + (item 1 interaction ) * (item 1 v1) + (item 2 interaction ) * (item 2 v1) +(item 3 interaction ) * (item 3 v1)  )]
    ifelse( 0 = who)
    [set  currentutility  (weightforplatformbase-vendor * (platformbase / platformbasesum) + weightfornetworkeffect-vendor * (networkeffectstrength / networkeffectstrength) + weightforreputation-vendor * (reputation / reputationsum)- weightforCost-vendor * (Cv / Cv_sum ))]
    [set  competitorutility  (weightforplatformbase-vendor * (platformbase / platformbasesum) + weightfornetworkeffect-vendor * (networkeffectstrength / networkeffectstrength) + weightforreputation-vendor * (reputation / reputationsum)- weightforCost-vendor * (Cv / Cv_sum ))]
  ]
  if(currentutility = 0 ) [ set currentutility 0.01]
  ifelse(competitorutility < currentutility)
  [set change 0][ifelse(competitorutility / currentutility < 0)[set change 1][if(competitorutility / currentutility > 1.1)[set change 1]]]
  ;show change
  report change

end

To-report chooseApp [ personnumber currentplatformnumber app_usercurrent  ]
  ; Calculates the utility for given person using direct and indirect network effects and subsidy
 let vendorbasesum 0
  let pricesum 0
  ask vendors [
  set vendorbasesum (vendorbasesum +  vendorbase1 + vendorbase0)
    set pricesum (pricesum + price)
  ]


  let change 0
  if (app_usercurrent > 0.5)[
  let vendorutility [0]
  let vendorarray [0]
  let positionmax 0

  ask vendors[
    ifelse(0 = currentplatformnumber)[if(p0 = 1)
    [set vendorutility fput (weightforvendorbase-customer * ( vendorbase1 + vendorbase0 / vendorbasesum) - weightforappprice-customer *( price / pricesum)) vendorutility

        set vendorarray fput who vendorarray
      ]][if(p1 = 1)
    [set vendorutility fput (weightforvendorbase-customer * ( vendorbase1 + vendorbase0 / vendorbasesum) - weightforappprice-customer *( price / pricesum)) vendorutility

        set vendorarray fput who vendorarray
      ]]
  ]

    if (length vendorutility = 1) [ set currentplatformnumber changeplatform personnumber

      ask vendors[
        ifelse(0 = currentplatformnumber)[if(p0 = 1)[
          set vendorutility fput (weightforvendorbase-customer * ( vendorbase1 + vendorbase0 / vendorbasesum) - weightforappprice-customer *( price / pricesum)) vendorutility

          set vendorarray fput who vendorarray
        ]][if(p1 = 1)[
          set vendorutility fput (weightforvendorbase-customer * ( vendorbase1 + vendorbase0 / vendorbasesum) - weightforappprice-customer *( price / pricesum)) vendorutility

          set vendorarray fput who vendorarray
        ]]
      ]
    ]

    ;show vendorutility
   set vendorutility remove-item (length vendorutility - 1 ) vendorutility
   set  vendorarray remove-item (length vendorarray - 1) vendorarray


  let maxcomputility max vendorutility
  set  positionmax position maxcomputility vendorutility
  set change item positionmax vendorarray
  ]
  report change


end

To-report chooseplatform
  ; Calculates the utility for given person using direct and indirect network effects and subsidy
  let platformbasesum 0
  let numberofvendorssum 0
  let reputationsum 0
  let Cc_sum 0
  ask platforms[
  set platformbasesum (platformbasesum + platformbase)
    set numberofvendorssum (numberofvendorssum + numberofvendors)
    set reputationsum (reputationsum + reputation)
    set Cc_sum (Cc_sum + Cc)
  ]


  let utility0 0
  let utility1 0
  let change 0
  ask platforms[
    ifelse(  who = 0 )
    [set  utility0  ( weightforplatformbase-customer * (platformbase / platformbasesum) + weightforvendors-customer * (numberofvendors / numberofvendorssum) + weightforreputation-customer * (Reputation / Reputationsum)   - weightforcost-customer * (Cc / Cc_sum) )]
    [set  utility1 ( weightforplatformbase-customer * (platformbase / platformbasesum) + weightforvendors-customer * (numberofvendors / numberofvendorssum) + weightforreputation-customer * (Reputation / Reputationsum)   - weightforcost-customer * (Cc / Cc_sum) )]
  ]

  ifelse(utility0 < utility1)
  [ifelse([numberofvendors] of platform 1 > 0)[set change 1][set change 0]][ifelse([numberofvendors] of platform 0 > 0)[set change 0][set change 1]]
  ;show change
  report change


end

to-report changeplatform [personnumber]

  ask person personnumber [
    ifelse(platformchoice = 0 ) [set platformchoice 1 ][set platformchoice 0 ]
  ]
  report platformchoice

end


to record
let counterforcustomertype 0
  while[counterforcustomertype < 1][
    set weightforplatformbase-customer item counterforcustomertype weightarray1
    set weightforvendors-customer item counterforcustomertype weightarray1
    set weightforreputation-customer item counterforcustomertype weightarray1
    set weightforcost-customer item counterforcustomertype weightarray1

  let Cc_counter 0
  while [Cc_counter < 1500][
    let reputationcounter 0
while [reputationcounter < 1200] [
let counter 0
setup
ask platform 0 [set reputation reputationcounter]
      ask platform 0 [set Cc Cc_counter]
while[counter < 10]
[simulate
set counter (counter + 1) ]
set marketshare lput ([platformbase] of platform 0  / ([platformbase] of platform 0 + [platformbase] of platform 1)) marketshare
    set entrantreputation lput reputationcounter entrantreputation
      set entrantCost lput Cc_counter entrantCost
        set customertype lput  counterforcustomertype customertype

set reputationcounter (reputationcounter + 500)

  ]
  set Cc_counter (Cc_counter + 500)]


set counterforcustomertype (counterforcustomertype + 1)
  ]

end

to-report sign [a]
  let areported 0
  if(a = 0)[set areported 0]
 if(a > 0)[set areported 1]
 if(a < 0)[set areported -1]
 report areported  
end 
